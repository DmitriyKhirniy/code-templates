apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: customDimaAngularTemplateV4
  title: New Angular template V4
  description: scaffolder v1beta2 template demo publishing to github Angular app new
spec:
  owner: DmitriyKhirniy
  type: website

  parameters:
    - title: Fill in some steps
      required:
        - name
        - owner
        - collaborators
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component and repo
          pattern: ^[a-z0-9-]+$
          ui:autofocus: true
          ui:options:
            rows: 5

        description:
          title: Description
          type: string
          pattern: ^[^\s][\w\s-]+[^\s]$
          description: Help others understand what these docs are about.

        owner:
          title: Owner
          description: Owner of the component
          type: string
          enum: [ 'Galileo-Backstage', 'GalileoDigital' ]
          default: 'Galileo-Backstage'

        collaborators:
          title: Collaborators
          description: Provide github teams with permissions
          type: array
          ui:options:
            orderable: false
          items:
            type: object
            required:
              - username
              - access
            properties:
              access:
                type: string
                description: The type of access for the github team
                default: pull
                enum:
                  - push
                  - pull
                  - admin
                  - maintain
                  - triage
              username:
                type: string
                pattern: ^[^\s][\w\s-]+[^\s]$
                description: The github team

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:cookiecutter
      input:
        url: https://github.com/DmitriyKhirniy/code-templates/tree/main/angular-template-v4/skeleton
        values:
          name: '{{ parameters.name }}'
          owner: '{{ parameters.owner }}'
          description: '{{ parameters.description }}'
          repoUrl: 'github.com?owner={{parameters.owner}}&repo={{parameters.name}}'

    - id: catalog-write
      name: Write Catalog information
      action: catalog:write
      input:
        component:
          apiVersion: 'backstage.io/v1alpha1'
          kind: Component
          metadata:
            name: '{{ parameters.name }}'
            annotations:
              github.com/project-slug: '{{ projectSlug parameters.repoUrl }}'
          spec:
            type: service
            lifecycle: production
            owner: '{{ parameters.owner }}'

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: '{{ parameters.description }}'
        repoUrl: 'github.com?owner={{parameters.owner}}&repo={{parameters.name}}'
        collaborators: '{{ json parameters.collaborators }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: '{{ steps.publish.output.remoteUrl }}'
      - title: Open in catalog
        icon: 'catalog'
        entityRef: '{{ steps.register.output.entityRef }}'
